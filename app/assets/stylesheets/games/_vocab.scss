// Specific CSS for your vocab game pages.
#audio-icon-vocab-game {
	transition: transform 0.3s ease;
}

#audio-icon-vocab-game:hover {
	transform: scale(1.1);
	cursor: pointer;
}

.vocab-game-xp-number {
	color: #00ffff; /* Choose a color that contrasts well with the background */
	font-size: 24px; /* Adjust as needed */
	text-shadow: 0 0 5px #00ffff, 0 0 10px #00ffff, 0 0 15px #00ffff;
}

#vocab-game-xp-number-sum {
	color: #00ffff; /* Choose a color that contrasts well with the background */
	font-size: 16px; /* Adjust as needed */
	text-shadow: 0 0 5px #00ffff, 0 0 10px #00ffff, 0 0 15px #00ffff;
	width: 20px;
}

#vocab-game-xp-plus {
	color: #00ffff; /* Choose a color that contrasts well with the background */
	font-size: 16px; /* Adjust as needed */
	text-shadow: 0 0 5px #00ffff, 0 0 10px #00ffff, 0 0 15px #00ffff;
	width: 10px;
}

.vocab-game-experience-bar-img {
	filter: drop-shadow(0px 0px 10px rgb(55, 48, 175)) invert(0%);
}

.vocab-game-close-btn {
	opacity: 0.5;
	cursor: pointer;
}

.vocab-game-close-btn:hover {
	opacity: 1;
	cursor: pointer;
}

.vocab-game-level-up {
	position: absolute;
	left: 12%;
	top: 100px;
	transform: translateX(-50%);
	opacity: 0;
	transition: opacity 0.5s ease-in-out;
}

.vocab-game-broken-sword {
	position: absolute;
	left: 12%;
	top: 100px;
	transform: translateX(-50%);
	opacity: 0;
	transition: opacity 0.5s ease-in-out;
}

.vocab-game-container {
	overflow: hidden;
	background-size: cover;
}

.vocab-game-level-up.active {
	opacity: 1;
	animation: shine 1s ease-in-out;
}

.vocab-game-broken-sword.active {
	opacity: 1;
	animation: red-shine 1s ease-in-out;
}

@keyframes shine {
	0% {
		filter: brightness(1);
	}
	50% {
		filter: brightness(2);
	}
	100% {
		filter: brightness(1);
	}
}

@keyframes red-shine {
	0% {
		filter: brightness(1) drop-shadow(0 0 0 red);
	}
	50% {
		filter: brightness(2) drop-shadow(0 0 10px red);
	}
	100% {
		filter: brightness(1) drop-shadow(0 0 0 red);
	}
}

.button-check-vocab-game {
	position: relative;
	margin: 0px 200px;
	padding: 0.5em 2.2em;
	outline: none;
	text-decoration: none;
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: pointer;
	border: none;
	background-color: #9873fe;
	border-radius: 1em;
	color: #ffffff;
	font-weight: bold;
	font-size: 1.2em;
}
.answers-container {
	width: 600px;
	min-height: 70px;
	height: auto;
	border-radius: 10px;
}
.correct-sentence-container {
	margin: 0px 200px;
	width: 350px;
	min-height: 50px;
	height: auto;
	border-radius: 20px;
	background-color: grey;
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}
.options-container {
	margin-top: 30px;
	width: 550px;
}
.botton-box-vocab-game {
	position: absolute;
	background-color: rgba(34, 34, 36, 0.99);
	// background-color: rgba(34, 34, 36, 0.99); PREVIOUS COLOR
	background-image: image-url(grammar_game_botton_background);
	background-size: cover;
	background-position: center;
	background-repeat: repeat;
	background-blend-mode: overlay;
	width: 100%;
	height: 160px;
	bottom: 0px;
	right: 0;
	left: 0;
	padding: 10px;
}
#progress-bar {
	width: 800px;
	background-color: grey;
	border-radius: 10px;
	overflow: hidden;
}
#current-progress-bar {
	width: 3%;
	height: 15px;
	background-color: #32cd32;
	transition: width 1s ease-in-out, box-shadow 1s ease-in-out;
}
#current-progress-bar.glow {
	box-shadow: 0 0 30px #fff, 0 0 60px #aaf, 0 0 100px #fff;
	filter: brightness(1.5);
}
.disabled {
	pointer-events: none;
	opacity: 0.5;
}

/* Style for Words options */

.btn-option-vocab-game {
	position: relative;
	margin: 0;
	padding: 0.3em 1em;
	outline: none;
	text-decoration: none;
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: pointer;
	border: none;
	background-color: #ffc506;
	border-radius: 10px;
	color: black;
	font-weight: 300;
	font-size: 18px;
	z-index: 0;
	overflow: hidden;
	transition: all 0.3s cubic-bezier(0.02, 0.01, 0.47, 1);
}

.btn-option-vocab-game:hover {
	animation: sh0 0.5s ease-in-out both;
}

@keyframes sh0 {
	0% {
		transform: rotate(0deg) translate3d(0, 0, 0);
	}

	25% {
		transform: rotate(7deg) translate3d(0, 0, 0);
	}

	50% {
		transform: rotate(-7deg) translate3d(0, 0, 0);
	}

	75% {
		transform: rotate(1deg) translate3d(0, 0, 0);
	}

	100% {
		transform: rotate(0deg) translate3d(0, 0, 0);
	}
}

.btn-option-vocab-game:hover span {
	animation: storm 0.7s ease-in-out both;
	animation-delay: 0.06s;
}

.btn-option-vocab-game::before,
.btn-option-vocab-game::after {
	content: "";
	position: absolute;
	right: 0;
	bottom: 0;
	width: 100px;
	height: 100px;
	border-radius: 50%;
	background: #fff;
	opacity: 0;
	transition: transform 0.15s cubic-bezier(0.02, 0.01, 0.47, 1),
		opacity 0.15s cubic-bezier(0.02, 0.01, 0.47, 1);
	z-index: -1;
	transform: translate(100%, -25%) translate3d(0, 0, 0);
}

.btn-option-vocab-game:hover::before,
button:hover::after {
	opacity: 0.15;
	transition: transform 0.2s cubic-bezier(0.02, 0.01, 0.47, 1),
		opacity 0.2s cubic-bezier(0.02, 0.01, 0.47, 1);
}

.btn-option-vocab-game:hover::before {
	transform: translate3d(50%, 0, 0) scale(0.9);
}

.btn-option-vocab-game:hover::after {
	transform: translate(50%, 0) scale(1.1);
}

/* Style for sun */

.sun-container {
	position: absolute;
	right: 100px;
	top: 110px;
	width: 250px;
	height: 250px;
	padding: 10px;
	display: flex;
	align-items: center;
	justify-content: center;
}

.cloud {
	width: 250px;
}

.front {
	padding-top: 45px;
	margin-left: 25px;
	display: inline;
	position: absolute;
	z-index: 11;
	animation: clouds 8s infinite;
	animation-timing-function: ease-in-out;
}

.back-vocab-game {
	margin-top: -30px;
	margin-left: 150px;
	z-index: 12;
	animation: clouds 12s infinite;
	animation-timing-function: ease-in-out;
}

.right-front {
	width: 45px;
	height: 45px;
	border-radius: 50% 50% 50% 0%;
	background-color: #4c9beb;
	display: inline-block;
	margin-left: -25px;
	z-index: 5;
}

.left-front {
	width: 65px;
	height: 65px;
	border-radius: 50% 50% 0% 50%;
	background-color: #4c9beb;
	display: inline-block;
	z-index: 5;
}

.right-back {
	width: 50px;
	height: 50px;
	border-radius: 50% 50% 50% 0%;
	background-color: #4c9beb;
	display: inline-block;
	margin-left: -20px;
	z-index: 5;
}

.left-back {
	width: 30px;
	height: 30px;
	border-radius: 50% 50% 0% 50%;
	background-color: #4c9beb;
	display: inline-block;
	z-index: 5;
}

.sun {
	width: 120px;
	height: 120px;
	background: -webkit-linear-gradient(to right, #fcbb04, #fffc00);
	background: linear-gradient(to right, #fcbb04, #fffc00);
	border-radius: 60px;
	display: inline;
	position: absolute;
}

.sunshine {
	animation: sunshines 2s infinite;
}

@keyframes sunshines {
	0% {
		transform: scale(1);
		opacity: 0.6;
	}

	100% {
		transform: scale(1.4);
		opacity: 0;
	}
}

@keyframes clouds {
	0% {
		transform: translateX(15px);
	}

	50% {
		transform: translateX(0px);
	}

	100% {
		transform: translateX(15px);
	}
}

/* Hamster style  */

#loading-element {
	margin-bottom: 700px !important;
}

.wheel-and-hamster {
	--dur: 1s;
	position: relative;
	width: 12em;
	height: 12em;
	font-size: 14px;
}

.wheel,
.hamster,
.hamster div,
.spoke {
	position: absolute;
}

.wheel,
.spoke {
	border-radius: 50%;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.wheel {
	background: radial-gradient(
		100% 100% at center,
		hsla(0, 0%, 60%, 0) 47.8%,
		hsl(0, 0%, 60%) 48%
	);
	z-index: 2;
}

.hamster {
	animation: hamster var(--dur) ease-in-out infinite;
	top: 50%;
	left: calc(50% - 3.5em);
	width: 7em;
	height: 3.75em;
	transform: rotate(4deg) translate(-0.8em, 1.85em);
	transform-origin: 50% 0;
	z-index: 1;
}

.hamster__head {
	animation: hamsterHead var(--dur) ease-in-out infinite;
	background: hsl(30, 90%, 55%);
	border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
	box-shadow: 0 -0.25em 0 hsl(30, 90%, 80%) inset,
		0.75em -1.55em 0 hsl(30, 90%, 90%) inset;
	top: 0;
	left: -2em;
	width: 2.75em;
	height: 2.5em;
	transform-origin: 100% 50%;
}

.hamster__ear {
	animation: hamsterEar var(--dur) ease-in-out infinite;
	background: hsl(0, 90%, 85%);
	border-radius: 50%;
	box-shadow: -0.25em 0 hsl(30, 90%, 55%) inset;
	top: -0.25em;
	right: -0.25em;
	width: 0.75em;
	height: 0.75em;
	transform-origin: 50% 75%;
}

.hamster__eye {
	animation: hamsterEye var(--dur) linear infinite;
	background-color: hsl(0, 0%, 0%);
	border-radius: 50%;
	top: 0.375em;
	left: 1.25em;
	width: 0.5em;
	height: 0.5em;
}

.hamster__nose {
	background: hsl(0, 90%, 75%);
	border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
	top: 0.75em;
	left: 0;
	width: 0.2em;
	height: 0.25em;
}

.hamster__body {
	animation: hamsterBody var(--dur) ease-in-out infinite;
	background: hsl(30, 90%, 90%);
	border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
	box-shadow: 0.1em 0.75em 0 hsl(30, 90%, 55%) inset,
		0.15em -0.5em 0 hsl(30, 90%, 80%) inset;
	top: 0.25em;
	left: 2em;
	width: 4.5em;
	height: 3em;
	transform-origin: 17% 50%;
	transform-style: preserve-3d;
}

.hamster__limb--fr,
.hamster__limb--fl {
	clip-path: polygon(0 0, 100% 0, 70% 80%, 60% 100%, 0% 100%, 40% 80%);
	top: 2em;
	left: 0.5em;
	width: 1em;
	height: 1.5em;
	transform-origin: 50% 0;
}

.hamster__limb--fr {
	animation: hamsterFRLimb var(--dur) linear infinite;
	background: linear-gradient(hsl(30, 90%, 80%) 80%, hsl(0, 90%, 75%) 80%);
	transform: rotate(15deg) translateZ(-1px);
}

.hamster__limb--fl {
	animation: hamsterFLLimb var(--dur) linear infinite;
	background: linear-gradient(hsl(30, 90%, 90%) 80%, hsl(0, 90%, 85%) 80%);
	transform: rotate(15deg);
}

.hamster__limb--br,
.hamster__limb--bl {
	border-radius: 0.75em 0.75em 0 0;
	clip-path: polygon(
		0 0,
		100% 0,
		100% 30%,
		70% 90%,
		70% 100%,
		30% 100%,
		40% 90%,
		0% 30%
	);
	top: 1em;
	left: 2.8em;
	width: 1.5em;
	height: 2.5em;
	transform-origin: 50% 30%;
}

.hamster__limb--br {
	animation: hamsterBRLimb var(--dur) linear infinite;
	background: linear-gradient(hsl(30, 90%, 80%) 90%, hsl(0, 90%, 75%) 90%);
	transform: rotate(-25deg) translateZ(-1px);
}

.hamster__limb--bl {
	animation: hamsterBLLimb var(--dur) linear infinite;
	background: linear-gradient(hsl(30, 90%, 90%) 90%, hsl(0, 90%, 85%) 90%);
	transform: rotate(-25deg);
}

.hamster__tail {
	animation: hamsterTail var(--dur) linear infinite;
	background: hsl(0, 90%, 85%);
	border-radius: 0.25em 50% 50% 0.25em;
	box-shadow: 0 -0.2em 0 hsl(0, 90%, 75%) inset;
	top: 1.5em;
	right: -0.5em;
	width: 1em;
	height: 0.5em;
	transform: rotate(30deg) translateZ(-1px);
	transform-origin: 0.25em 0.25em;
}

.spoke {
	animation: spoke var(--dur) linear infinite;
	background: radial-gradient(
			100% 100% at center,
			hsl(0, 0%, 60%) 4.8%,
			hsla(0, 0%, 60%, 0) 5%
		),
		linear-gradient(
				hsla(0, 0%, 55%, 0) 46.9%,
				hsl(0, 0%, 65%) 47% 52.9%,
				hsla(0, 0%, 65%, 0) 53%
			)
			50% 50% / 99% 99% no-repeat;
}

/* Animations */
@keyframes hamster {
	from,
	to {
		transform: rotate(4deg) translate(-0.8em, 1.85em);
	}

	50% {
		transform: rotate(0) translate(-0.8em, 1.85em);
	}
}

@keyframes hamsterHead {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(0);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(8deg);
	}
}

@keyframes hamsterEye {
	from,
	90%,
	to {
		transform: scaleY(1);
	}

	95% {
		transform: scaleY(0);
	}
}

@keyframes hamsterEar {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(0);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(12deg);
	}
}

@keyframes hamsterBody {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(0);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(-2deg);
	}
}

@keyframes hamsterFRLimb {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(50deg) translateZ(-1px);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(-30deg) translateZ(-1px);
	}
}

@keyframes hamsterFLLimb {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(-30deg);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(50deg);
	}
}

@keyframes hamsterBRLimb {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(-60deg) translateZ(-1px);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(20deg) translateZ(-1px);
	}
}

@keyframes hamsterBLLimb {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(20deg);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(-60deg);
	}
}

@keyframes hamsterTail {
	from,
	25%,
	50%,
	75%,
	to {
		transform: rotate(30deg) translateZ(-1px);
	}

	12.5%,
	37.5%,
	62.5%,
	87.5% {
		transform: rotate(10deg) translateZ(-1px);
	}
}

@keyframes spoke {
	from {
		transform: rotate(0);
	}

	to {
		transform: rotate(-1turn);
	}
}
